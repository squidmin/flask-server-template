name: Build, Test, and Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask

    - name: Run tests
      run: |
        python -m unittest discover -s . -p "test_*.py"

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0.5.0
      with:
        credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0

    - name: Configure Docker to use the gcloud command-line tool as a credential helper
      run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

    - name: Build and Push Docker image to Google Artifact Registry
      run: |
        docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/lofty-root-docker-test/flask-app:latest .
        docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/lofty-root-docker-test/flask-app:latest

    - name: Authenticate with Google Cloud
      env:
        GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
      run: |
        echo "$GCLOUD_SERVICE_KEY" | tr -d '\r' > gcloud-service-key.json
        gcloud auth activate-service-account --key-file=gcloud-service-key.json
        export GOOGLE_APPLICATION_CREDENTIALS=$PWD/gcloud-service-key.json
        export GCP_ACCESS_TOKEN=$(gcloud auth print-access-token)

    - name: Deploy to Cloud Run (CLI)
      run: |
        gcloud run deploy flask-app \
          --image=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/lofty-root-docker-test/flask-app:latest \
          --project=${{ secrets.GCP_PROJECT_ID }} \
          --region=us-central1 \
          --platform=managed \
          --quiet
#          --allow-unauthenticated  # Example flag, adjust according to your needs
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /home/runner/work/flask-server-template/flask-server-template/gcloud-service-key.json

