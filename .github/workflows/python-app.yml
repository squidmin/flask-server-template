name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask
    - name: Run tests
      run: |
        python -m unittest discover -s . -p "test_*.py"

    - name: Setup Google Cloud SDK # Setup Google Cloud SDK (skip if already installed in the environment)
      run: |
        if ! gcloud --version; then
          curl -sSL https://sdk.cloud.google.com | bash
        fi
      env:
        GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}

    - name: Authenticate with Google Cloud
      env:
        GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
      run: |
        echo "$GCLOUD_SERVICE_KEY" | tr -d '\r' > gcloud-service-key.json
        gcloud auth activate-service-account --key-file=gcloud-service-key.json
        export GOOGLE_APPLICATION_CREDENTIALS=$PWD/gcloud-service-key.json
        export GCP_ACCESS_TOKEN=$(gcloud auth print-access-token)

    # Add Docker build if not already part of the workflow
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: us-central1-docker.pkg.dev/lofty-root-378503/lofty-root-docker-test/flask-app:latest  # Replace flask-app with your service name

    # Deploy to Cloud Run
    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v0.7.0
      with:
        service: flask-app  # Name of your Cloud Run service
        image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-app:latest
        credentials: ${{ secrets.GCLOUD_SERVICE_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        region: us-central1  # Specify the region your Cloud Run service is in
